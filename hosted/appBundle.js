(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("pictoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,o,a)=>{const n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),c=await n.json();document.getElementById("pictoMessage").classList.add("hidden"),c.redirect&&(window.location=c.redirect),c.error&&t(c.error),a&&a(c)},hideError:()=>{document.getElementById("pictoMessage").classList.add("hidden")}}}},t={};function o(a){var n=t[a];if(void 0!==n)return n.exports;var c=t[a]={exports:{}};return e[a](c,c.exports,o),c.exports}(()=>{const e=o(603),t=t=>{t.preventDefault(),e.hideError();const o=s.toDataURL(),n=t.target.querySelector("#_csrf").value;let c;return c=u?t.target.querySelector("#borderChooser").value:"Black",e.sendPost(t.target.action,{pictoURL:o,borderColor:c,_csrf:n},a),!1},a=()=>{console.log("successful post!")},n=e=>React.createElement("div",null,React.createElement("canvas",{id:"mainCanvas",width:"700",height:"500"},"Get a real browser!"),React.createElement("div",{id:"controls"},React.createElement("label",null,"Tool:",React.createElement("select",{id:"toolChooser"},React.createElement("option",{value:"toolPencil"},"Pencil"))),React.createElement("label",null,"Line Width:",React.createElement("select",{id:"lineWidthChooser",defaultValue:"3"},React.createElement("option",{value:"1"},"1"),React.createElement("option",{value:"2"},"2"),React.createElement("option",{value:"3"},"3"),React.createElement("option",{value:"4"},"4"),React.createElement("option",{value:"5"},"5"),React.createElement("option",{value:"6"},"6"),React.createElement("option",{value:"7"},"7"),React.createElement("option",{value:"8"},"8"),React.createElement("option",{value:"9"},"9"),React.createElement("option",{value:"10"},"10"))),React.createElement("div",{id:"colorSelector"},React.createElement("label",null,"Color:",React.createElement("select",{id:"colorChooser",defaultValue:"Red"},React.createElement("option",{value:"red"},"Red"),React.createElement("option",{value:"black"},"Black"),React.createElement("option",{value:"orange"},"Orange"),React.createElement("option",{value:"blue"},"Blue")))),React.createElement("span",null,React.createElement("input",{id:"clearButton",type:"button",value:"Clear"})),React.createElement("span",null,React.createElement("form",{id:"pictoForm",onSubmit:t,name:"pictoForm",action:"/maker",method:"POST",className:"pictoForm"},React.createElement("div",{id:"borderSelector"},React.createElement("label",null,"Border:",React.createElement("select",{id:"borderChooser",defaultValue:"Black"},React.createElement("option",{value:"Black"},"Black"),React.createElement("option",{value:"Purple"},"Purple"),React.createElement("option",{value:"Gold"},"Gold")))),React.createElement("input",{type:"hidden",id:"_csrf",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makePictoSubmit",type:"submit",value:"Post"})))));let c,l,r,i,s,u=!0,d=!0,m=!1;function p(e){r=e.target.value}function h(e){i=e.target.value}function v(e){m=!0;let t=y(e);l.beginPath(),l.moveTo(t.x,t.y)}function E(e){if(!m)return;let t=y(e);l.strokeStyle=i,l.lineWidth=r,l.lineTo(t.x,t.y),l.stroke()}function f(e){console.log(e.type),m=!1}function R(e){console.log(e.type),m=!1}function g(){l.clearRect(0,0,l.canvas.width,l.canvas.height),b(l,"lightgray",10,10)}function y(e){let t={};return t.x=e.pageX-e.target.offsetLeft,t.y=e.pageY-e.target.offsetTop,t}function b(e,t,o,a){e.save(),e.strokeStyle=t,e.fillStyle="#ffffff",e.lineWidth=.5,e.fillRect(0,0,e.canvas.width,e.canvas.height);for(let t=o+.5;t<e.canvas.width;t+=o)e.beginPath(),e.moveTo(t,0),e.lineTo(t,e.canvas.height),e.stroke();for(let t=a+.5;t<e.canvas.height;t+=a)e.beginPath(),e.moveTo(0,t),e.lineTo(e.canvas.width,t),e.stroke();e.restore()}window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();(async()=>{const e=await fetch("/getBorder");(await e.json()).border.boughtBorderPack||(u=!1,document.querySelector("#borderSelector").innerHTML="")})(),ReactDOM.render(React.createElement(n,{csrf:t.csrfToken}),document.getElementById("makePicto")),(async()=>{const e=await fetch("/getColor");(await e.json()).color.boughtColorPack||(d=!1,document.querySelector("#colorSelector").innerHTML="")})(),c=document.querySelector("#mainCanvas"),s=c,l=c.getContext("2d"),r=3,i="red",l.lineWidth=r,l.strokeStyle=i,l.lineCap="round",l.lineJoin="round",b(l,"lightgray",10,10),c.onmousedown=v,c.onmousemove=E,c.onmouseup=f,c.onmouseout=R,document.querySelector("#lineWidthChooser").onchange=p,d&&(document.querySelector("#colorChooser").onchange=h),document.querySelector("#clearButton").onclick=g}})()})();